init sequence class
read form

dictionary of sample types


bracket every 20 cases

inputs
vial start?
reinject?

error handling
if key/value pair does not exist
prompt to create

add dilutions to certain samples, brain, liver, gastric, intestine
order = brain, liver, urine, gastric
ability to add priorities...


method specifics
gen - vial naming convention
vol - tray1/tray2
z - need datafile name
scions, shimadzu's, should be fine
lcmsms - tray1/tray2/tray3
set max vials for all methods?


data structure
index = row labels
columns = column labels
"sample":pd.series([...], index=[1, 2, 3 ...])
"vial"

ndarray/lists
d = {"one": [1.0, 2.0, 3.0, 4.0], "two": [4.0, 3.0, 2.0, 1.0]}
pd.DataFrame(d)

import pandas as pd

# Define the lists
a = [1, 2, 3, 4, 5, 6]
b = [7, 8, 9, 10, 11, 12]

# Create the dictionary
d = {"area": a, "istd": b}

# Create the DataFrame
df = pd.DataFrame(d)

# Print the DataFrame
print(df)

#import pandas as pd
#use to fill dataframe
# # Load your existing Excel file
# df = pd.read_excel('example.xlsx')

# # Make changes to specific cells
# df.at[2, 'Column_Name'] = 'New_Value'  # Modify cell in row 3, column 'Column_Name'

# # Save the modified DataFrame back to Excel
# df.to_excel('example_modified.xlsx', index=False)



#use to fill single cells 
# from openpyxl import load_workbook

# # Load your existing Excel workbook
# wb = load_workbook('example.xlsx')

# # Select the active worksheet
# ws = wb.active

# # Modify a specific cell
# ws['B3'] = 'New_Value'  # Modify cell B3

# # Save the modified workbook
# wb.save('example_modified.xlsx')



send complete sequence to 
G:\LABORATORY OPERATIONS\06 - LABORATORY FORMS\LF-23 INSTRUMENT CHECKLISTS
appropriate method 
make folder with appropriate date